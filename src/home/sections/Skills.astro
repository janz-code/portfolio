---
import SectionLayout from "../../commons/layouts/SectionLayout.astro";
import getSkills from "../../commons/content/skills";
import {getProficiency} from "../../commons/utils/skillUitl";
import Star from "../../commons/assets/icons/system/Star.astro";
import CategoryContainer from "../components/SkillItem";
const locale = Astro.currentLocale!;
const title = locale === "en" ? "Skills" : "Habilidades";
const skills = await getSkills(locale);
---
<SectionLayout title={title}>
    <ul class="grid 3xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 list-none gap-3 2xl:gap-5">
        {skills.sort((a,b)=> a.skills.length-b.skills.length).map(category => (
            <CategoryContainer client:load category={category} locale={locale} items={category.skills.length}>
                {category.skills.sort((a,b)=> b.proficiency-a.proficiency).map(skill => (
                        <li class="grid grid-cols-6 items-start">
                            <div class="p-1 rounded-md w-fit justify-self-start border-[1px]"
                                 style={{backgroundColor: skill.color.surface, borderColor: skill.color.border}}>
                                <figure class="2xl:w-5 2xl:h-5 w-4 h-4"
                                        style={{color: skill.color.focus}}>
                                    <skill.icon/>
                                </figure>
                            </div>
                            <div class="flex flex-col gap-y-0.5 col-span-5 font-poppins font-light text-sm">
                                <h4 class="capitalize font-semibold font-cascadia text-base">{skill.name}</h4>
                                <div class="flex items-center gap-x-2">
                                    <p>{skill.years} years</p>
                                    -
                                    <div class="flex items-center gap-x-0.5">
                                        {skill.proficiency >= 8 && (
                                                <figure class="w-5 h-5 text-amber-400">
                                                    <Star/>
                                                </figure>
                                        )}
                                        <p>{getProficiency(skill.proficiency, locale)}</p>
                                    </div>
                                </div>
                                {skill.relation && (
                                        <ul class="flex items-center gap-1 flex-wrap">
                                            {skill.relation.map(relation => (
                                                    <li class="capitalize border-[1px] px-2 rounded-md"
                                                        style={{borderColor: skill.color.border,
                                                            backgroundColor: skill.color.surface, color: skill.color.focus}}>
                                                        {relation}
                                                    </li>
                                            ))}
                                        </ul>
                                )}
                            </div>
                        </li>
                ))}
            </CategoryContainer>
        ))}
    </ul>
</SectionLayout>